### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type AggregateUser {
  count: Int!
}

type AggregateWidget {
  count: Int!
}

type AuthPayload {
  token: String
  User: User
}

type Mutation {
  createWidget(data: WidgetCreateInput!): Widget!
  login(email: String!, password: String!): AuthPayload
  signup(address: String, email: String!, name: String!, password: String!, phone: String!, surname: String!): AuthPayload
  updateMe(data: UpdateMeInput!): User
  updateWidget(data: WidgetUpdateInput!, where: WidgetWhereUniqueInput!): Widget
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  me: User
  user(where: UserWhereUniqueInput!): User
  users(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]!
  usersConnection(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): UserConnection!
  widget(where: WidgetWhereUniqueInput!): Widget
  widgets(after: String, before: String, first: Int, last: Int, orderBy: WidgetOrderByInput, skip: Int, where: WidgetWhereInput): [Widget!]!
  widgetsConnection(after: String, before: String, first: Int, last: Int, orderBy: WidgetOrderByInput, skip: Int, where: WidgetWhereInput): WidgetConnection!
}

input UpdateMeInput {
  address: String
  backgroundImage: String
  email: String
  googleToken: String
  intraToken: String
  phone: String
  refreshTime: Int
  sidebarDisabled: Boolean
  spotifyToken: String
  surname: String
  timezone: String
  widgets: UpdateMeWidgetsInput
}

input UpdateMeWidgetsInput {
  connect: [WidgetWhereUniqueInput!]
  disconnect: [WidgetWhereUniqueInput!]
}

type User {
  address: String
  backgroundImage: String
  email: String!
  googleToken: String
  id: ID!
  intraToken: String
  name: String!
  phone: String!
  refreshTime: Int
  sidebarDisabled: Boolean
  spotifyToken: String
  surname: String!
  timezone: String
  type: UserType
  widgets(after: String, before: String, first: Int, last: Int, orderBy: WidgetOrderByInput, skip: Int, where: WidgetWhereInput): [Widget!]
}

type UserConnection {
  aggregate: AggregateUser!
  edges: [UserEdge!]!
  pageInfo: PageInfo!
}

type UserEdge {
  cursor: String!
  node: User!
}

enum UserOrderByInput {
  address_ASC
  address_DESC
  backgroundImage_ASC
  backgroundImage_DESC
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  googleToken_ASC
  googleToken_DESC
  id_ASC
  id_DESC
  intraToken_ASC
  intraToken_DESC
  name_ASC
  name_DESC
  password_ASC
  password_DESC
  phone_ASC
  phone_DESC
  refreshTime_ASC
  refreshTime_DESC
  sidebarDisabled_ASC
  sidebarDisabled_DESC
  spotifyToken_ASC
  spotifyToken_DESC
  surname_ASC
  surname_DESC
  timezone_ASC
  timezone_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum UserType {
  ADMIN
  USER
}

input UserWhereInput {
  address: String
  address_contains: String
  address_ends_with: String
  address_gt: String
  address_gte: String
  address_in: [String!]
  address_lt: String
  address_lte: String
  address_not: String
  address_not_contains: String
  address_not_ends_with: String
  address_not_in: [String!]
  address_not_starts_with: String
  address_starts_with: String
  AND: [UserWhereInput!]
  backgroundImage: String
  backgroundImage_contains: String
  backgroundImage_ends_with: String
  backgroundImage_gt: String
  backgroundImage_gte: String
  backgroundImage_in: [String!]
  backgroundImage_lt: String
  backgroundImage_lte: String
  backgroundImage_not: String
  backgroundImage_not_contains: String
  backgroundImage_not_ends_with: String
  backgroundImage_not_in: [String!]
  backgroundImage_not_starts_with: String
  backgroundImage_starts_with: String
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  googleToken: String
  googleToken_contains: String
  googleToken_ends_with: String
  googleToken_gt: String
  googleToken_gte: String
  googleToken_in: [String!]
  googleToken_lt: String
  googleToken_lte: String
  googleToken_not: String
  googleToken_not_contains: String
  googleToken_not_ends_with: String
  googleToken_not_in: [String!]
  googleToken_not_starts_with: String
  googleToken_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  intraToken: String
  intraToken_contains: String
  intraToken_ends_with: String
  intraToken_gt: String
  intraToken_gte: String
  intraToken_in: [String!]
  intraToken_lt: String
  intraToken_lte: String
  intraToken_not: String
  intraToken_not_contains: String
  intraToken_not_ends_with: String
  intraToken_not_in: [String!]
  intraToken_not_starts_with: String
  intraToken_starts_with: String
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  phone: String
  phone_contains: String
  phone_ends_with: String
  phone_gt: String
  phone_gte: String
  phone_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_not: String
  phone_not_contains: String
  phone_not_ends_with: String
  phone_not_in: [String!]
  phone_not_starts_with: String
  phone_starts_with: String
  refreshTime: Int
  refreshTime_gt: Int
  refreshTime_gte: Int
  refreshTime_in: [Int!]
  refreshTime_lt: Int
  refreshTime_lte: Int
  refreshTime_not: Int
  refreshTime_not_in: [Int!]
  sidebarDisabled: Boolean
  sidebarDisabled_not: Boolean
  spotifyToken: String
  spotifyToken_contains: String
  spotifyToken_ends_with: String
  spotifyToken_gt: String
  spotifyToken_gte: String
  spotifyToken_in: [String!]
  spotifyToken_lt: String
  spotifyToken_lte: String
  spotifyToken_not: String
  spotifyToken_not_contains: String
  spotifyToken_not_ends_with: String
  spotifyToken_not_in: [String!]
  spotifyToken_not_starts_with: String
  spotifyToken_starts_with: String
  surname: String
  surname_contains: String
  surname_ends_with: String
  surname_gt: String
  surname_gte: String
  surname_in: [String!]
  surname_lt: String
  surname_lte: String
  surname_not: String
  surname_not_contains: String
  surname_not_ends_with: String
  surname_not_in: [String!]
  surname_not_starts_with: String
  surname_starts_with: String
  timezone: String
  timezone_contains: String
  timezone_ends_with: String
  timezone_gt: String
  timezone_gte: String
  timezone_in: [String!]
  timezone_lt: String
  timezone_lte: String
  timezone_not: String
  timezone_not_contains: String
  timezone_not_ends_with: String
  timezone_not_in: [String!]
  timezone_not_starts_with: String
  timezone_starts_with: String
  type: UserType
  type_in: [UserType!]
  type_not: UserType
  type_not_in: [UserType!]
  widgets_every: WidgetWhereInput
  widgets_none: WidgetWhereInput
  widgets_some: WidgetWhereInput
}

input UserWhereUniqueInput {
  email: String
  id: ID
  phone: String
}

type Widget {
  id: ID!
  settings: String!
  title: String!
  type: WidgetType!
}

type WidgetConnection {
  aggregate: AggregateWidget!
  edges: [WidgetEdge!]!
  pageInfo: PageInfo!
}

input WidgetCreateInput {
  id: ID
  settings: String!
  title: String!
  type: WidgetType!
}

type WidgetEdge {
  cursor: String!
  node: Widget!
}

enum WidgetOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  settings_ASC
  settings_DESC
  title_ASC
  title_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum WidgetType {
  WORLD_TIME
}

input WidgetUpdateInput {
  settings: String
  title: String
  type: WidgetType
}

input WidgetWhereInput {
  AND: [WidgetWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [WidgetWhereInput!]
  OR: [WidgetWhereInput!]
  settings: String
  settings_contains: String
  settings_ends_with: String
  settings_gt: String
  settings_gte: String
  settings_in: [String!]
  settings_lt: String
  settings_lte: String
  settings_not: String
  settings_not_contains: String
  settings_not_ends_with: String
  settings_not_in: [String!]
  settings_not_starts_with: String
  settings_starts_with: String
  title: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
  type: WidgetType
  type_in: [WidgetType!]
  type_not: WidgetType
  type_not_in: [WidgetType!]
}

input WidgetWhereUniqueInput {
  id: ID
}
